package com.estivate;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.stream.Collectors;

import javax.persistence.Id;

import com.estivate.util.StringPipe;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class EstivateBasic {
	
	public static String create(Class entity) {
		
		List<String> fields = new ArrayList<>();
		for(Field field : entity.getDeclaredFields()) {
			StringPipe fieldCreation = new StringPipe();
			fieldCreation.separator(" ");
			
			fieldCreation.append(field.getName());
			
			if(field.getType() == Integer.class || field.getType() == Long.class || field.getType() == Long.TYPE) {
				fieldCreation.append("int");
			}
			else if(field.getType() == String.class) {
				fieldCreation.append("varchar(100)");
			}
			else {
				System.out.println("Cannot map type "+field.getType());
			}
			
			if(field.isAnnotationPresent(Id.class)) {
				fieldCreation.append("primary key");
			}
			
			
			fields.add(fieldCreation.toString());
		}
		
		return "CREATE TABLE "+entity.getSimpleName()+" ("+fields.stream().collect(Collectors.joining(", "))+")";
	}
	
	public static String insert(Object entity) {
		// Insert into students (ID, name) values (1, 'Nam Ha Minh')
		LinkedHashMap<String, String> fieldValueList = new LinkedHashMap<>();
		
		for(Field field : entity.getClass().getDeclaredFields()) {
			
			// Skip Id, will be auto generated by db
			if(field.isAnnotationPresent(Id.class)) {
				continue;
			}
			
			
			
			
		}
		
		return "INSERT INTO "+entity.getClass().getSimpleName()+"("+fieldValueList.keySet().stream().collect(Collectors.joining(", "))+") VALUES ("+fieldValueList.values().stream().collect(Collectors.joining(", "))+")";
	}
	

}
